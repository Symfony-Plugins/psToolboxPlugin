<?php
/*
 * This file is part of the psToolboxPlugin package.
 * (c) 2010 Thomas Rabaix <thomas.rabaix@soleoweb.com>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

/**
 *
 *
 * @package    psToolboxPlugin
 * @author     Thomas Rabaix <thomas.rabaix@soleoweb.com>
 * @version    SVN: $Id$
 */
class psToolboxConfigHandler extends sfYamlConfigHandler
{

  /**
   * compile configuration for the file psToolboxPlugin.yml
   *
   * @param array $configFiles
   * @return string
   */
  public function execute($configFiles)
  {
    $this->initialize();

    // Parse the yaml
    $config = $this->parseYamls($configFiles);

    $config = $this->replaceConstants($config);

    $config = sfToolkit::arrayDeepMerge(
      isset($config['default']) && is_array($config['default']) ? $config['default'] : array(),
      isset($config['all']) && is_array($config['all']) ? $config['all'] : array(),
      isset($config[sfConfig::get('sf_environment')]) && is_array($config[sfConfig::get('sf_environment')]) ? $config[sfConfig::get('sf_environment')] : array()
    );

    $configNew = array();
    foreach($config as $name => $value)
    {
      $configNew['ps_toolbox_'.$name] = $value;
    }

    // compile data
    $retval = sprintf("<?php\n".
                      "// auto-generated by psToolboxConfigHandler\n".
                      "// date: %s\n%s\n", date('Y/m/d H:i:s'), "sfConfig::add(unserialize('".serialize($configNew)."'));\n");

    return $retval;
  }
}
